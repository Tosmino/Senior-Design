#include "mcc_generated_files/system.h"

// These global variables are used to keep track of which value is displayed on the led array
int array[15] = {17, 19, 18, 22, 20, 28, 24, 24, 16, 48, 48, 112, 80, 208, 144};
int counter = 0;   // Array index
int winCount = 0;  // Holds number of consecutive wins
int rising = 1;    // Bool for direction of travel
int overwatch = 0; // Used extend delay
int temp = 0;      // Holds value of PORTA while PORTA is manipulated

// Function for basic motion
void bounce()
{
    overwatch = 0;          // reset
    PORTA = array[counter]; // assign PORTA
    temp = array[counter];  // hold value
    _T1IF = 0;              // Reset the timer counter

    // Check if end of array
    if (array[counter] == 144)
    {
        rising = 0; // change direction
    }

    // Check if beginning of array
    if (array[counter] == 17)
    {
        rising = 1; // change direction
    }

    // Increment based on direction
    if (rising == 1)
    {
        counter++; // Increment counter
    }
    else
    {
        counter--; // Decrement counter
    }
}

void winCheck()
{
    _T1IF = 0; // Reset the timer counter

    // Check if win
    if (temp == 16)
    {
        // Only once
        if (overwatch == 0)
        {
            ++winCount;
            PR1 = PR1 - 500; // go FASTER
        }
        if (overwatch < 10)
        {
            PORTA = 255;
            ++overwatch; // increment
        }
        else
        {
            PORTA = winCount; // Display consecutive wins
        }
    }
    else
    {
        winCount = 0; // Loss resets winCount
        PR1 = 7500 - 1; // Set max value for the timer
    }
}

void _ISR _T1Interrupt(void)
{

    if (PORTDbits.RD6 == 1) // button not pushed
    {
        bounce(); // Call for basic motion
    }
    else
    {
        winCheck(); // Check if win or not
    }
}

int main(void)
{
    // initialize the device
    SYSTEM_Initialize();

    TRISDbits.TRISD6 = 1; // Makes RD6 an input
    TRISA = 0xff00;       // Set least significant bits of PORTA as outputs
    T1CON = 0x8030;       // Set one to one pre-scaler
    _T1IF = 4;            // Timer 1 interrupt priority
    PR1 = 7500 - 1;       // Set max value for the timer

    _T1IF = 0; // Clear the timer value
    _T1IE = 1; // Enable the timer

    while (1)
    {
        Nop(); // Do Nothing
    }

    return 1;
}